package com.itwill.sida.dao.impl;

import java.util.ArrayList;
import java.util.HashMap;

import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Component;

import com.itwill.sida.dao.CardDao;
import com.itwill.sida.dto.Card;
import com.itwill.util.MyBatisSqlSessionFactory;

import mybatis.mapper.CardMapper;

@Component
public class CardDaoImpl implements CardDao {

	@Override
	public void cardRegist(HashMap<String, String> cMap) {
		SqlSession sqlSession = null;
		try {
			System.err.println(cMap);
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			sqlSession.getMapper(CardMapper.class).insertCard(cMap);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
	}

	@Override
	public ArrayList<Card> getCardListByEmail(String m_email) {
		SqlSession sqlSession = null;
		ArrayList<Card> cardList = null;
		try {
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			cardList = sqlSession.getMapper(CardMapper.class).selectCardListByEmail(m_email);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
		return cardList;
	}

	@Override
	public String getKeyword(String c_no) {
		SqlSession sqlSession = null;
		String rtnedKeyword = null;
		try {
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			rtnedKeyword = sqlSession.getMapper(CardMapper.class).selectKeyword(c_no);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
		return rtnedKeyword;
	}

	@Override
	public Card getCard(String c_no) {
		SqlSession sqlSession = null;
		Card card = null;
		try {
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			card = sqlSession.getMapper(CardMapper.class).selectCard(c_no);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
		return card;
	}

	@Override
	public void editCard(HashMap<String, String> cMap) {
		SqlSession sqlSession = null;
		try {
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			sqlSession.getMapper(CardMapper.class).updateCard(cMap);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
	}

	@Override
	public void deleteCard(String c_no) {
		SqlSession sqlSession = null;
		try {
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			sqlSession.getMapper(CardMapper.class).deleteCard(c_no);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
	}

	@Override
	public ArrayList<Card> getCardListByPhoneNum(String phone) {
		SqlSession sqlSession = null;
		ArrayList<Card> cardList = null;
		try {
			sqlSession = MyBatisSqlSessionFactory.getSqlSession();
			cardList = sqlSession.getMapper(CardMapper.class).selectCardListByPhoneNum(phone);
			sqlSession.commit();
		} finally {
			if (sqlSession != null) {
				sqlSession.close();
			}
		}
		return cardList;
	}
}
